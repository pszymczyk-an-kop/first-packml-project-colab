<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{5bccd5a4-76c6-4984-9be1-ff51995fd275}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	un : ST_UN;
	
	// Arrays with 'em' universal structure and 'fbEM' containing ST_MACHINE structure which contains of references to fbEM function block
	em : ARRAY[1..Counters.packmlEmLast] OF ST_EM;
	fbEM : ARRAY[1..Counters.packmlEmLast] OF ST_MACHINE;
	
	// Array containing all instances fo fbSliderEM with its own iterator
	SliderEM : ARRAY[1..Counters.SliderEMNo] OF fbSliderEM;
	iSliderEM : DINT := 1;
	
	// Array containing all instances fo fbSliderWithGripperEM with its own iterator
	SliderWithGripperEM : ARRAY[1..Counters.SliderWithGripperEMNo] OF fbSliderWithGripperEM;
	iSliderWithGripperEM : DINT := 1;
	
	// Array containing all instances fo fbXYMoverEM with its own iterator
	XYMoverEM : ARRAY[1..Counters.XYMoverEMNo] OF fbXYMoverEM;
	iXYMoverEM : DINT := 1;
	
	// Flag of initial config, used to set configuration data only once
	InitialConfig : BOOL := TRUE;
	
	// FOR iterator
	i : DINT;
	
	SignalSimSlider: fbSignalSimSlider;
	SignalSimXYMover : fbSignalSimXYMover;
	timer : TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF InitialConfig THEN
	
	em[1].Config.Functionality := E_Function.eSlider;
	em[2].Config.Functionality := E_Function.eSliderWithGripper;
	em[3].Config.Functionality := E_Function.eXYMover;

	FOR i := 1 TO Counters.packmlEmLast DO
		em[i].Config.Data.I REF= GVL.aInput[i];
		em[i].Config.Data.Q REF= GVL.aOutput[i];
	
		CASE em[i].Config.Functionality OF
			E_Function.eSlider:
				fbEM[i].fbEM REF= SliderEM[iSliderEM];
				iSliderEM := iSliderEM + 1;
			E_Function.eSliderWithGripper:
				fbEM[i].fbEM REF= SliderWithGripperEM[iSliderWithGripperEM];
				iSliderWithGripperEM := iSliderWithGripperEM + 1;
			E_Function.eXYMover:
				fbEM[i].fbEM REF= XYMoverEM[iXYMoverEM];
				iXYMoverEM := iXYMoverEM + 1;
		END_CASE
	END_FOR
	
	InitialConfig := FALSE;
END_IF

SignalSimSlider(em := em[1], EnableSim := TRUE);
SignalSimXYMover(em := em[3]);

FOR i := 1 TO Counters.packmlEmLast DO
	fbEM[i].fbEM(em := em[i], un := un);
END_FOR



















]]></ST>
    </Implementation>
    <Action Name="Init" Id="{240e2975-4539-4594-8253-c4c38cfa784d}">
      <Implementation>
        <ST><![CDATA[// Tutaj planuje przenieść tą inicjalizację a w samym mainie logikę]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="125" Count="0" />
      <LineId Id="223" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="122" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="184" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="188" Count="1" />
      <LineId Id="213" Count="0" />
      <LineId Id="190" Count="1" />
      <LineId Id="214" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="134" Count="0" />
      <LineId Id="351" Count="1" />
      <LineId Id="382" Count="0" />
      <LineId Id="384" Count="0" />
      <LineId Id="268" Count="1" />
      <LineId Id="225" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="305" Count="16" />
      <LineId Id="304" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.Init">
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>