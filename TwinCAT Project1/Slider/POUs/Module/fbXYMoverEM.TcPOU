<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fbXYMoverEM" Id="{542faac4-2fc2-4de1-969d-21d2b14af459}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fbXYMoverEM EXTENDS fbEM
VAR_IN_OUT
END_VAR
VAR
	F_Reset : BOOL := TRUE;
END_VAR
VAR RETAIN
	XYMoverActualStep : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
	Input/Output mapping
	I[1] <- Siłownik 1 - zamknięty 
	I[2] <- Siłownik 1 - otwarty
	I[3] <- Siłownik 2 - zamknięty 
	I[4] <- Siłownik 2 - otwarty
	I[5] <- Czujnik obecności produktu -> TRUE jeżeli produkt jest na narzędziu
	I[7] <- Stop z szafy/ESTOP
	Q[1] <- Siłownik 1 - komenda zamknij
	Q[2] <- Siłownik 1 - komenda otwórz
	Q[3] <- Siłownik 2 - komenda zamknij
	Q[4] <- Siłownik 2 - komenda otwórz
	Q[7] <- Rezerwa
*)

//-----------------HOMING------------------------

//-------------AUTO SEQUENCE---------------------



IF em.Config.Functionality = E_Function.eXYMover THEN
	IF em.Cmd = E_Cmd.STOP THEN
		XYMoverActualStep := 1;
	END_IF
	IF em.Cmd = E_Cmd.ABORT THEN
		XYMoverActualStep := 4;
	END_IF
END_IF

CASE XYMoverActualStep OF
	0: 
	IF em.Config.Data.I[3] AND em.Config.Data.I[1] THEN
		em.Status := E_Status.IDLE;
		XYMoverActualStep := 10;
	ELSE 
		em.Status := E_Status.UNDEFINED;
		XYMoverActualStep := 1;
	END_IF
	
	1:
		IF em.Cmd = E_Cmd.RESET THEN
			em.Status := E_Status.RESETTING;
			XYMoverActualStep := 2;
		END_IF
		
	2:
		IF em.Status = E_Status.RESETTING THEN
			em.Config.Data.Q[1] := TRUE;
			em.Config.Data.Q[3] := TRUE;
			XYMoverActualStep := 0;
		END_IF
	
	3:  // Rezerwa
		
		
	4: 	IF em.Cmd = E_Cmd.RESET THEN
			em.Config.Data.Q[7] := FALSE;
			XYMoverActualStep := 5;
		END_IF
	
	5:
		em.Status := E_Status.CLEARING;
		XYMoverActualStep := 2;
	
	10:
		IF em.Cmd = E_Cmd.START THEN
			em.Status := E_Status.STARTING;
			XYMoverActualStep := 20;
		END_IF

	20:
		em.Status := E_Status.EXECUTE;
		IF em.Config.Data.I[5] = TRUE THEN
			XYMoverActualStep := 30; 
		END_IF

	30:
			em.Config.Data.Q[1] := FALSE;
			em.Config.Data.Q[2] := TRUE;
			XYMoverActualStep := 40;
	
	40: 
		IF em.Config.Data.I[2] = TRUE THEN
			em.Config.Data.Q[3] := FALSE;
			em.Config.Data.Q[4] := TRUE;
			XYMoverActualStep := 50;
		END_IF
		
	50:
		IF em.Config.Data.I[4] = TRUE THEN
			XYMoverActualStep := 60; 
		END_IF 
	
	60: 
		IF em.Config.Data.I[5] = FALSE THEN
			XYMoverActualStep := 70; 
		END_IF 
	
	70: em.Config.Data.Q[3] := TRUE;
		em.Config.Data.Q[1] := TRUE;
		XYMoverActualStep := 20;
		
END_CASE

em.SequenceStep := XYMoverActualStep;]]></ST>
    </Implementation>
    <LineIds Name="fbXYMoverEM">
      <LineId Id="114" Count="4" />
      <LineId Id="121" Count="2" />
      <LineId Id="119" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="125" Count="1" />
      <LineId Id="13" Count="53" />
      <LineId Id="137" Count="0" />
      <LineId Id="68" Count="3" />
      <LineId Id="138" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="30" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>