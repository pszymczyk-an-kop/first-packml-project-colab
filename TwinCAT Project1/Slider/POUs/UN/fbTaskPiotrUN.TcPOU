<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fbTaskPiotrUN" Id="{e4410345-6b08-4ef7-a94f-07fca8e2946d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fbTaskPiotrUN EXTENDS fbUN
VAR	
	// Arrays with 'em' universal structure and 'fbEM' containing ST_MACHINE structure which contains of references to fbEM function block
	em : ARRAY[1..Counters.packmlEmLast] OF ST_EM;
	fbEM : ARRAY[1..Counters.packmlEmLast] OF ST_MACHINE;
	
	// Array containing all instances fo fbSliderEM with its own iterator
	SliderEM : ARRAY[1..Counters.SliderEMNo] OF fbSliderEM;
	iSliderEM : DINT := 1;
	
	// Array containing all instances fo fbSliderWithGripperEM with its own iterator
	SliderWithGripperEM : ARRAY[1..Counters.SliderWithGripperEMNo] OF fbSliderWithGripperEM;
	iSliderWithGripperEM : DINT := 1;
	
	// Array containing all instances fo fbXYMoverEM with its own iterator
	XYMoverEM : ARRAY[1..Counters.XYMoverEMNo] OF fbXYMoverEM;
	iXYMoverEM : DINT := 1;
	
	i : DINT;
	State : INT := 0;
	declareIterator: DINT;
	initIterator: DINT;
	initialConfig: BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Method FB_init takes care for initialisation of correct modules
// fbEM and em array number:
// 1 <- XYMovers
// 2 <- SliderWithGripper
// 3 <- XYMover
// 4 <- Slider
// 5 <- Slider


//////////////////////////////////////////////////////////////////////
IF initialConfig THEN
	initialConfig := FALSE;
		// Specifing module type of each module in array
	em[1].Config.Functionality := E_Function.eXYMover;
	em[2].Config.Functionality := E_Function.eSliderWithGripper;
	em[3].Config.Functionality := E_Function.eXYMover;
	em[4].Config.Functionality := E_Function.eSlider;
	em[5].Config.Functionality := E_Function.eSlider;
	
	// FOR loop to specify config for each module
	FOR declareIterator := 1 TO Counters.packmlEmLast DO
		em[declareIterator].Config.Data.I REF= GVL.aInput[declareIterator];
		em[declareIterator].Config.Data.Q REF= GVL.aOutput[declareIterator];
	
		CASE em[declareIterator].Config.Functionality OF
			E_Function.eSlider:
				fbEM[declareIterator].fbEM REF= SliderEM[iSliderEM];
				iSliderEM := iSliderEM + 1;
			E_Function.eSliderWithGripper:
				fbEM[declareIterator].fbEM REF= SliderWithGripperEM[iSliderWithGripperEM];
				iSliderWithGripperEM := iSliderWithGripperEM + 1;
			E_Function.eXYMover:
				fbEM[declareIterator].fbEM REF= XYMoverEM[iXYMoverEM];
				iXYMoverEM := iXYMoverEM + 1;
		END_CASE
		
		fbEM[declareIterator].fbEM(em := em[initIterator], un := un);
		
	//	IF __ISVALIDREF(fbEM[declareIterator].fbEM) THEN
	//		fbEM[declareIterator].fbEM(em := em[initIterator], un := un);
	//	ELSE
	//		ADSLOGSTR(
	//			msgCtrlMask := ADSLOG_MSGTYPE_HINT, 
	//			msgFmtStr   := 'Zly ref',
	//			strArg		:= ''
	//		);      
	//	END_IF
	END_FOR
END_IF
//////////////////////////////////////////////////////////////////////


// All init configuration done in FB_init method
IF cell.Cmd = E_CMD_CELL.STOP AND NOT (State = 100 OR State = 110) THEN
	State := 100;
END_IF

IF cell.Cmd = E_CMD_CELL.ABORT AND NOT (State = 200 OR State = 210) THEN
	State := 200;
END_IF

CASE State OF
	0:	un.Status := E_Status.undefined;
		State := 5;
	
	5:	FOR i := 1 TO Counters.packmlEmLast DO
			IF NOT (em[i].Status = E_Status.idle) THEN
				un.Cmd := E_CMD.reset;
			ELSE
				un.Status := E_Status.idle;
				State := 10;
			END_IF
		END_FOR
	
	10:	IF cell.Cmd = E_CMD_CELL.START THEN
			un.Cmd := E_CMD.start;
			un.Status := E_Status.starting;
			State := 20;
		END_IF
	
	20:	FOR i := 1 TO Counters.packmlEmLast DO
			IF NOT (em[i].Status = E_Status.execute) THEN
				un.Cmd := E_CMD.reset;
				un.Status := E_Status.resetting;
				State := 0;
			END_IF
		END_FOR

	100:un.Cmd := E_CMD.stop;
		un.Status := E_Status.stopping;
		State := 110;
	
	110:FOR i := 1 TO Counters.packmlEmLast DO
			IF NOT (em[i].Status = E_Status.stopped) THEN
				;
			ELSE
				un.Status := E_Status.stopped;
				State := 5;
			END_IF
		END_FOR
	
	200:un.Cmd := E_CMD.abort;
		un.Status := E_Status.aborting;
		State := 210;
	
	210:FOR i := 1 TO Counters.packmlEmLast DO
			IF NOT (em[i].Status = E_Status.aborted) THEN
				;
			ELSE
				State := 220;
			END_IF
		END_FOR
	
	220:un.Cmd := E_CMD.clear;
		State := 5;
END_CASE


























]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{561b991e-a2eb-4871-8f3e-ec3979cefce5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR

VAR
	declareIterator : DINT;
	initIterator : dint;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//// Specifing module type of each module in array
//em[1].Config.Functionality := E_Function.eXYMover;
//em[2].Config.Functionality := E_Function.eSliderWithGripper;
//em[3].Config.Functionality := E_Function.eXYMover;
//em[4].Config.Functionality := E_Function.eSlider;
//em[5].Config.Functionality := E_Function.eSlider;

//// FOR loop to specify config for each module
//FOR declareIterator := 1 TO Counters.packmlEmLast DO
//	em[declareIterator].Config.Data.I REF= GVL.aInput[declareIterator];
//	em[declareIterator].Config.Data.Q REF= GVL.aOutput[declareIterator];

//	CASE em[declareIterator].Config.Functionality OF
//		E_Function.eSlider:
//			fbEM[declareIterator].fbEM REF= SliderEM[iSliderEM];
//			iSliderEM := iSliderEM + 1;
//		E_Function.eSliderWithGripper:
//			fbEM[declareIterator].fbEM REF= SliderWithGripperEM[iSliderWithGripperEM];
//			iSliderWithGripperEM := iSliderWithGripperEM + 1;
//		E_Function.eXYMover:
//			fbEM[declareIterator].fbEM REF= XYMoverEM[iXYMoverEM];
//			iXYMoverEM := iXYMoverEM + 1;
//	END_CASE
	
////	IF __ISVALIDREF(fbEM[declareIterator].fbEM) THEN
////		fbEM[declareIterator].fbEM(em := em[initIterator], un := un);z
////	ELSE
////		ADSLOGSTR(
////			msgCtrlMask := ADSLOG_MSGTYPE_HINT, 
////			msgFmtStr   := 'Zly ref',
////			strArg		:= ''
////		);      
////	END_IF
//END_FOR
























]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="fbTaskPiotrUN">
      <LineId Id="9" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="35" Count="3" />
      <LineId Id="260" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="303" Count="23" />
      <LineId Id="337" Count="0" />
      <LineId Id="336" Count="0" />
      <LineId Id="327" Count="8" />
      <LineId Id="302" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="171" Count="1" />
      <LineId Id="191" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="192" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="118" Count="1" />
      <LineId Id="128" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="129" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="134" Count="3" />
      <LineId Id="139" Count="1" />
      <LineId Id="168" Count="0" />
      <LineId Id="173" Count="4" />
      <LineId Id="179" Count="1" />
      <LineId Id="183" Count="0" />
      <LineId Id="187" Count="2" />
      <LineId Id="184" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="196" Count="7" />
      <LineId Id="205" Count="1" />
      <LineId Id="195" Count="0" />
      <LineId Id="207" Count="2" />
      <LineId Id="50" Count="0" />
      <LineId Id="143" Count="23" />
      <LineId Id="40" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="39" Count="0" />
    </LineIds>
    <LineIds Name="fbTaskPiotrUN.FB_init">
      <LineId Id="84" Count="22" />
      <LineId Id="166" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="172" Count="3" />
      <LineId Id="171" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="121" Count="23" />
      <LineId Id="120" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>